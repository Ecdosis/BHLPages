#!/bin/sh
#
# /etc/init.d/bhlpages -- startup script for the BHL pages service
#
# Written by Desmond Schmidt desmond.allan.schmidt@gmail.com
#

### BEGIN INIT INFO
# Provides:          bhlpages
# Required-Start:    mongodb $remote_fs $syslog
# Required-Stop:     mongodb $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start BHL Pages.
# Description:       Start the Biodiversity Heritage Library page description service for TILT
### END INIT INFO

# Exit if the package is not installed

[ -x "/usr/local/bin/bhlpages/BHLPages.jar" ] || exit 0
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Biodiversity Hertitage Library page description service for TILT"
NAME=bhlpages
DAEMON=/usr/local/bin/bhlpages/BHLPages.jar
LIBPATH=`java -cp /usr/local/bin/bhlpages/ LibPath`:/usr/local/lib
# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh
# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present
. /lib/lsb/init-functions

getjarpaths()
{
  JARPATH=""
  for f in $1/*.jar
  do
    JARPATH="$JARPATH:$f"
  done
  echo $JARPATH
  return
}
do_start() {
  JARPATHS=`getjarpaths /usr/local/bin/bhlpages/lib`
  pkill -f BHLPages.jar
  java -Djava.library.path=$LIBPATH -cp .$JARPATHS:/usr/local/bin/bhlpages/BHLPages.jar bhl.pages.JettyServer -w 8084 2>/dev/null &
}
# Stop the service bhlpages
do_stop() {
  pkill -f BHLPages.jar
  sleep 2
}
### main logic ###
case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  #reload|force-reload)
        #
        # If do_reload() is not implemented then leave this commented out
        # and leave 'force-reload' as an alias for 'restart'.
        #
        #log_daemon_msg "Reloading $DESC" "$NAME"
        #do_reload
        #log_end_msg $?
        #;;
  restart|force-reload)
        #
        # If the "reload" option is implemented then remove the
        # 'force-reload' alias
        # 
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  *)
        #echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 3
        ;;
esac
echo ""
